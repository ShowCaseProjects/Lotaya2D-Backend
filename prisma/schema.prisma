// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output="/src/generated/lotaya_wallet"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users{
  user_id        Int    @id         @default(autoincrement())
  phone_number   String @unique     @db.VarChar(13)
  user_name      String?            @db.VarChar(30)
  password       String?            
  otp_code       String?            @db.VarChar(6)                
  role_id        Int    
  sms_send_time  DateTime?
  user_role      Roles              @relation(fields:[role_id],references:[role_id])
  is_verify      String             @db.VarChar(1)                
  account_status String             @db.VarChar(1)               
  register_date  DateTime           @default(now())
  updated_date   DateTime           @default(now())
  deleted_date   DateTime?

  @@map("users")
}

model Roles{
  role_id       Int         @id
  name          String      @unique @db.VarChar(100)
  users         Users[]

  @@map("roles")
}

model Wallet{
  wallet_id      Int    @id         @default(autoincrement())
  user_id        Int @unique        
  game_amount    Decimal?            
  main_amount    Decimal?
  agent_id       Int                
  register_date  DateTime           @default(now())
  updated_date   DateTime           @default(now())
  deleted_date   DateTime?

  @@map("wallet")
}


model PaymentMethod{
  payment_id        Int    @id         @default(autoincrement())
  user_id           Int        
  payment_type      String            
  receiver_account  String
  amount            Decimal   
  register_date     DateTime           @default(now())
  updated_date      DateTime           @default(now())
  deleted_date      DateTime?

  @@map("paymentmethod")
}


model Admin{
  admin_id        Int    @id         @default(autoincrement())
  phone_number   String @unique     @db.VarChar(13)
  admin_name      String?            @db.VarChar(30)
  password       String?                  
  role_id        Int    
  admin_role      Roles              @relation(fields:[role_id],references:[role_id])             
  account_status String             @db.VarChar(1)               
  register_date  DateTime           @default(now())
  updated_date   DateTime           @default(now())
  deleted_date   DateTime?

  @@map("admin")
}

model AdminRoles{
  role_id       Int         @id
  name          String      @unique @db.VarChar(100)
  users         Admin[]

  @@map("adminroles")
}